<lnk:WindowBase x:Name="wnd" mc:Ignorable="d"  x:Class="AgentFastAdmin.AgentAdminnWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:lnk="clr-namespace:WpfUserControlLib.Base;assembly=WpfUserControlLib" 
                xmlns:cmn="clr-namespace:GigaHunt"
                xmlns:View="clr-namespace:GigaHunt.View" 
                xmlns:View1="clr-namespace:WpfUserControlLib.Views;assembly=WpfUserControlLib" 
                xmlns:Models="clr-namespace:DB.QStats.Std.Models;assembly=DB.QStats.Std"
                Style="{StaticResource WindowStyle_Aav0}" Title="AgentAdminWindow" Height="350" Width="1600" Loaded="OnLoaded">
  <WindowChrome.WindowChrome>
    <WindowChrome CaptionHeight="0" ResizeBorderThickness="10" />
  </WindowChrome.WindowChrome>
  <lnk:WindowBase.Resources>
    <ResourceDictionary >
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/WpfUserControlLib;component/Base/BasicDefaultsLayout.xaml" />
        <ResourceDictionary Source="/WpfUserControlLib;component/Base/Anime.Base.xaml" />
        <ResourceDictionary Source="/WpfUserControlLib;component/Anime/SmartOpacityToggleAnimStyle.xaml" />
        <ResourceDictionary Source="/WpfUserControlLib;component/Anime/IsObsoleteBurronStyle.xaml" />
        <ResourceDictionary Source="/WpfUserControlLib;component/Base/ComboBox.Base.xaml" />
        <ResourceDictionary Source="/WpfUserControlLib;component/Base/DataGrid.Base.xaml" />
        <ResourceDictionary Source="/WpfUserControlLib;component/Base/DataGrid.Anime.xaml" />
        <ResourceDictionary Source="/WpfUserControlLib;component/ColorScheme/Theme.Color.Dark.Google.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <Style TargetType="FrameworkElement" >
        <Setter Property="Control.Margin" Value="8 4" />
        <Setter Property="VerticalAlignment" Value="Center" />
      </Style>

      <Style TargetType="{x:Type TextBox}"   BasedOn="{StaticResource tbxRW}" />
      <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TbkVCenteredInfoClr}" />

      <CollectionViewSource x:Key="eMailViewSource" d:DesignSource="{d:DesignInstance {x:Type Models:Email}, CreateList=True}"/>
      <CollectionViewSource x:Key="eMailEHistsViewSource" Source="{Binding Ehists, Source={StaticResource eMailViewSource}}"/>
    </ResourceDictionary>
  </lnk:WindowBase.Resources>
  <Border Style="{StaticResource BorderStyle_Aav0}" CornerRadius="10" Padding="10">
    <Grid x:Name="ZommablePanel" >
      <Grid.LayoutTransform>
        <TransformGroup>
          <ScaleTransform ScaleX="{Binding ZV, ElementName=wnd, FallbackValue=1}" ScaleY="{Binding ZV, ElementName=wnd, FallbackValue=1}" />
        </TransformGroup>
      </Grid.LayoutTransform>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <TextBlock  Margin="-38,15,0,0"                       FontSize="23" FontFamily="Ink Free" FontWeight="ExtraBold" Foreground="{DynamicResource AgntButtonForeground}" Text="Agents " RenderTransformOrigin="0.5,0.5" VerticalAlignment="Top" HorizontalAlignment="Left">
        <TextBlock.RenderTransform>
          <RotateTransform Angle="-90"/>
        </TextBlock.RenderTransform>
      </TextBlock>

      <StackPanel Orientation="Horizontal" x:Name="ctrlPnl">
        <Label Content="      _F" Target="{Binding ElementName=tbFilter}" />
        <TextBox Width="120" FontSize="16"          x:Name="tbFilter" Text="{Binding Srch, Delay=300, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

        <StackPanel Orientation="Vertical" VerticalAlignment="Center">
          <CheckBox Content="_+ Banned"   Checked="OnFilter" Unchecked="OnFilter" Margin="4" x:Name="cbAll" />
          <CheckBox Content="_+ Notes "   Checked="OnFilter" Unchecked="OnFilter" Margin="4" x:Name="cbNtA" />
        </StackPanel>

        <Grid Margin="0">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
          </Grid.RowDefinitions>
          <Label    Grid.ColumnSpan="2"          Content="Leads Only:" Foreground="#1a1" HorizontalAlignment="Center" />
          <CheckBox Grid.Row="1" Grid.Column="0" Content="Emails"      Foreground="#1a1" Checked="OnFilter" Unchecked="OnFilter" Margin="8" x:Name="cbxLeadEmails" />
          <CheckBox Grid.Row="1" Grid.Column="1" Content="Companies"   Foreground="#1a1" Checked="OnFilter" Unchecked="OnFilter" Margin="8" x:Name="cbxLeadCompns" />
        </Grid>

        <Menu Width="88" Foreground="#aaa" >
          <MenuItem Header="_Save"  Click="OnSave"           />
          <MenuItem Header="Max 50" Click="OnMoreHistCounts" ToolTip="Set max to 50 (from 10) on filter results" />
          <MenuItem Header="Quit"   IsEnabled="False" />
        </Menu>

        <TextBlock x:Name="tbkTitle" Foreground="#1af" TextWrapping="Wrap" Text="Info" />
      </StackPanel>

      <Grid Grid.Row="1" DataContext="{StaticResource eMailViewSource}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="2*"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="*"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>


        <DataGrid x:Name="eMailDataGrid" Grid.Row="1" ItemsSource="{Binding}" IsReadOnly="False" SelectionChanged="OnSelectnChgd"
                IsSynchronizedWithCurrentItem="True" RowHeight="22" CanUserAddRows="True">
          <DataGrid.Columns>
            <DataGridTextColumn Header=" Email (id)"  Binding="{Binding Id}"             IsReadOnly="True"/>
            <DataGridTextColumn Header=" Fname"       Binding="{Binding Fname}"           />
            <DataGridTextColumn Header=" Lname"       Binding="{Binding Lname}"           />
            <DataGridTextColumn Header=" Company"     Binding="{Binding Company}"         />
            <DataGridTextColumn Header=" !Avail"      Binding="{Binding DoNotNotifyOnAvailableForCampaignId}"      IsReadOnly="False" ElementStyle="{StaticResource CenterAlignStyle}" />
            <DataGridTextColumn Header=" !OffMt"      Binding="{Binding DoNotNotifyOnOffMarketForCampaignId}"      IsReadOnly="False" ElementStyle="{StaticResource CenterAlignStyle}" />
            <DataGridTextColumn Header=" PermBan"     Binding="{Binding PermBanReason}"  Foreground="#c00" />
            <DataGridTextColumn Header=" ResndAftr"   Binding="{Binding ReSendAfter, StringFormat=\{0:yy-MM-dd\}}" IsReadOnly="True"  />
            <DataGridTextColumn Header=" Added"       Binding="{Binding AddedAt,  Converter={cmn:UniConverter}}"   IsReadOnly="True"  />
            <DataGridTextColumn Header=" Sent"        Binding="{Binding LastSent, Converter={cmn:UniConverter}}"   IsReadOnly="True"  />
            <DataGridTextColumn Header=" Rcvd"        Binding="{Binding LastRcvd, Converter={cmn:UniConverter}}"   IsReadOnly="True"  />
            <DataGridTextColumn Header=" Sent"        Binding="{Binding Ttl_Sent}"       IsReadOnly="True" ElementStyle="{StaticResource CenterAlignStyle}" Foreground="#01e" />
            <DataGridTextColumn Header=" Rcvd"        Binding="{Binding Ttl_Rcvd}"       IsReadOnly="True" ElementStyle="{StaticResource CenterAlignStyle}" Foreground="#1b1" />
            <DataGridTextColumn Header=" Notes"       Binding="{Binding Notes}"          FontSize="8" Width="*"  />
          </DataGrid.Columns>
        </DataGrid>

        <DataGrid x:Name="eHistsDataGrid" Grid.Column="2" ItemsSource="{Binding Source={StaticResource eMailEHistsViewSource}}" Grid.Row="1" RowHeight="42" IsReadOnly="True" Margin="0" HeadersVisibility="Column">
          <DataGrid.Columns>
            <DataGridTextColumn Header="Emailed" Binding="{Binding EmailedAt, Converter={cmn:UniConverter}}" SortDirection="Descending"  />
            <!--ToolTipService.ToolTip="{Binding EmailedAt, StringFormat=\{0:yyyy-MMM-dd\}}"-->
            <DataGridTextColumn Header="R-S"     Binding="{Binding RecivedOrSent}"  ElementStyle="{StaticResource CenterAlignStyle}" />
            <DataGridTextColumn Header="Subject" Binding="{Binding LetterSubject}"  Width="120" />
            <DataGridTextColumn Header="Body"    Binding="{Binding LetterBody}"     Width="3*"  FontSize="8" Foreground="#6b1" />
            <DataGridTextColumn Header="Notes"   Binding="{Binding Notes}"          Width="1*"  FontSize="8" Foreground="#11e"  />
          </DataGrid.Columns>
        </DataGrid>

        <Grid x:Name="grid1" Grid.Row="3" VerticalAlignment="Stretch" >
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="2*"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>

          <Label Content="E_mail (Id)"      Grid.Column="0" Grid.Row="0" />
          <TextBox                          Grid.Column="1" Grid.Row="0" Text="{Binding Id, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}" />
          <Label Content="Modified At"      Grid.Column="4" Grid.Row="0" />
          <TextBlock                        Grid.Column="5" Grid.Row="0" Text="{Binding ModifiedAt}" />
          <Button                           Grid.Column="5" Grid.Row="0" Content="Del" Click="OnDel" ToolTip="onDel ... ?????~~~~!!! " Foreground="#f00" HorizontalAlignment="Right" Margin="0" />

          <Label Content="First Name"       Grid.Column="0" Grid.Row="1" />
          <TextBox                          Grid.Column="1" Grid.Row="1" Text="{Binding Fname, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}"  />
          <Label Content="Last Name"        Grid.Column="2" Grid.Row="1" />
          <TextBox                          Grid.Column="3" Grid.Row="1" Text="{Binding Lname, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}"  />
          <Label Content="Company"          Grid.Column="4" Grid.Row="1" />
          <TextBox                          Grid.Column="5" Grid.Row="1" Text="{Binding Company, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}"  />

          <Label Content="Perm Ban Rsn"     Grid.Column="0" Grid.Row="2" Target="{Binding ElementName=tbPbr}" />
          <Button                           Grid.Column="1" Grid.Row="2" Content="!agn"  Tag="Not an Agent"         HorizontalAlignment="Left" Height="26" Click="OnPBR" Margin="00,0,0,0"  Width="48" ToolTip="Set PBR to 'Not an Agent'" />
          <Button                           Grid.Column="1" Grid.Row="2" Content="faild" Tag="Delivery has failed"  HorizontalAlignment="Left" Height="26" Click="OnPBR" Margin="50,0,0,0"  Width="48" ToolTip="Set PBR to 'Delivery has failed'" />
          <Button                           Grid.Column="1" Grid.Row="2" Content="peer"  Tag="Peer"                 HorizontalAlignment="Left" Height="26" Click="OnPBR" Margin="100,0,0,0" Width="48" ToolTip="Set PBR to 'Peer'" />
          <TextBox                          Grid.Column="1" Grid.Row="2" Text="{Binding PermBanReason, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}" x:Name="tbPbr" HorizontalAlignment="Stretch" Margin="150,0,0,0" />
          <!--ton                           Grid.Column="1" Grid.Row="2" Content="FLD"  Tag="{Binding ElementName=tbPbr, Path=Text}"           Height="26" Click="onPBR" Margin="48,0,0,0"  Padding="3" ToolTip="Set PBR to text on the left" HorizontalAlignment="Right" />-->
          <Button                           Grid.Column="2" Grid.Row="2" Content="ne_xt" x:Name="bt227"             HorizontalAlignment="Left" Height="26" Click="OnNxt" Margin="2,0,0,0"   Width="48" ToolTip="Update Outlook" Padding="0" />
          <Button                           Grid.Column="2" Grid.Row="2" Content="OLk"   x:Name="bt222"             HorizontalAlignment="Left" Height="26" Click="OnOLk" Margin="52,0,71,0" Width="48" ToolTip="Update Outlook" />
          <Label Content="   Phone"         Grid.Column="2" Grid.Row="2" />
          <TextBox                          Grid.Column="3" Grid.Row="2" Text="{Binding Phone, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}" />
          <Label Content="_Re-send after"   Grid.Column="4" Grid.Row="2" Target="{Binding ElementName=tbRa}" />
          <DatePicker                       Grid.Column="5" Grid.Row="2" SelectedDate="{Binding ReSendAfter, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}"  x:Name="tbRa" />

          <Label Content="Priority"         Grid.Column="0" Grid.Row="3" />
          <TextBox                          Grid.Column="1" Grid.Row="3" Text="{Binding NotifyPriority, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}"  />

          <Button Content="_DNN Avl"        Grid.Column="2" Grid.Row="3" Click="OnDNN" Margin="5 0" ToolTip="Do Not Notify - Available for this Camp-n" HorizontalAlignment="Right" />
          <TextBox                          Grid.Column="3" Grid.Row="3" Text="{Binding DoNotNotifyOnAvailableForCampaignId, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}"  />
          <Label Content="DNN OffMarkt"     Grid.Column="4" Grid.Row="3" />
          <TextBox                          Grid.Column="5" Grid.Row="3" Text="{Binding DoNotNotifyOnOffMarketForCampaignId, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}"  />

          <Label Content="_Notes"           Grid.Column="0" Grid.Row="4" Target="{Binding ElementName=tbAN}" />
          <TextBox                          Grid.Column="1" Grid.Row="4" Text="{Binding Notes, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}" VerticalAlignment="Stretch" Grid.ColumnSpan="5" x:Name="tbAN" AcceptsReturn="True" MinHeight="42" />

        </Grid>
        <Grid x:Name="grid2" Margin="0" Grid.Column="2" DataContext="{StaticResource eMailEHistsViewSource}" Grid.Row="3" >
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <Label Content="Subj"   Grid.Column="0"  Grid.Row="0" />
          <TextBlock Grid.Column="1"                            Grid.Row="0" Text="{Binding LetterSubject}" Width="320"/>
          <TextBox   Grid.ColumnSpan="4"                        Grid.Row="1" Text="{Binding LetterBody}" TextWrapping="Wrap" MaxHeight="700" VerticalAlignment="Stretch" ScrollViewer.VerticalScrollBarVisibility="Visible" IsReadOnly="True" />
          <Label Content="  Recived or Sent" Grid.Column="2"  Grid.Row="0" />
          <TextBlock Grid.Column="3"                          Grid.Row="0" Text="{Binding RecivedOrSent}" />
          <Label Content="Mailed"           Grid.Column="0" Grid.Row="3" />
          <TextBlock                          Grid.Column="1" Grid.Row="3" Text="{Binding EmailedAt, StringFormat=\{0:yyyy-MMM-dd HH:mm\}}" />
          <Label Content="Added"            Grid.Column="2" Grid.Row="3" />
          <TextBlock                          Grid.Column="3" Grid.Row="3" Text="{Binding AddedAt, StringFormat=\{0:yyyy-MMM-dd HH:mm\}}"  />
          <Label Content="Note"   Grid.Column="0"           Grid.Row="4"  />
          <TextBox Grid.Column="1"                            Grid.Row="4" Text="{Binding Notes, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}" Grid.ColumnSpan="3" Height="42" TextWrapping="WrapWithOverflow" x:Name="tbLN" AcceptsReturn="True"/>
        </Grid>

        <GridSplitter Grid.Row="1" Grid.Column="1" Grid.RowSpan="2"  Width="8" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
        <GridSplitter Grid.Row="2" Grid.ColumnSpan="3"              Height="8" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

      </Grid>

      <TextBlock x:Name="tbver" Margin="0 -6 100 0" FontSize="13" Text="ver" HorizontalAlignment="Right" VerticalAlignment="Top" Foreground="#4af" />
      <View1:ThemeSelectorUsrCtrl x:Name="themeSelector1" Margin="100 20"      HorizontalAlignment="Right" VerticalAlignment="Top" />
      <View:MainSwitchboardUsrCtrl Width="78" Margin="18 -8" VizAgent="Collapsed" HorizontalAlignment="Right" VerticalAlignment="Top" />
      <Button Content="X" Click="OnClose" BorderThickness="0" Width="22"          HorizontalAlignment="Right" VerticalAlignment="Top" IsCancel="True" Padding="2" Margin="-5" FontSize="14" Foreground="#c00" />
    </Grid>
  </Border>
</lnk:WindowBase>
